networks:
  dev:

services:
  frontend:
    build:
      context: ./frontend
      target: build
    volumes:
      - /app/node_modules
      - ./frontend/:/app
    container_name: frontend_application
    ports:
      - '5173:5173'
    networks:
      - dev
    depends_on:
      - db_postgres

  backend:
    build:
      context: ./backend
      target: build
    environment:
      - PG_DB=dating
      - PG_USER=root
      - PG_PASSWORD=root
      - PG_HOST=db_postgres
    volumes:
      - /app/node_modules/
      - ./backend/:/app
    container_name: backend_application
    ports:
      - '8081:8081'
    networks:
      - dev
    depends_on:
      - db_postgres

  ngnix:
    image: nginx:stable-alpine
    ports:
      - 80:80
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    container_name: nginx-dating
    depends_on:
      - backend
      - frontend
    networks:
      - dev
  db_postgres:
    container_name: db_postgres
    image: postgres:16.4
    restart: always
    environment:
      - POSTGRES_DB=dating
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    stdin_open: true
    tty: true
    ports:
      - 5432:5432
    networks:
      - dev
    volumes:
      - db_postgres_data:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - dev

volumes:
  db_postgres_data: {}
